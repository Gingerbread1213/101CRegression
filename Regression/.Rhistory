step_mutate(x0064e = replace_na(x0064e / x0001e, 0),
x0065e = replace_na(x0065e / x0001e, 0),
x0066e = replace_na(x0066e / x0001e, 0),
x0067e = replace_na(x0067e / x0001e, 0),
x0068e = replace_na(x0068e / x0001e, 0),
x0069e = replace_na(x0069e / x0001e, 0)) %>%
step_mutate(x0072e = replace_na(x0072e / x0071e, 0),
x0073e = replace_na(x0073e / x0071e, 0),
x0074e = replace_na(x0074e / x0071e, 0),
x0075e = replace_na(x0075e / x0071e, 0)) %>%
step_mutate(x0084e = replace_na(x0084e / x0083e, 0),
x0085e = replace_na(x0085e / x0083e, 0)) %>%
step_mutate(x0077e = replace_na(x0077e / x0076e, 0),
x0078e = replace_na(x0078e / x0076e, 0),
x0079e = replace_na(x0079e / x0076e, 0),
x0080e = replace_na(x0080e / x0076e, 0),
x0081e = replace_na(x0081e / x0076e, 0),
x0082e = replace_na(x0082e / x0076e, 0),
x0083e = replace_na(x0083e / x0076e, 0)) %>%
step_mutate(x0071e = replace_na(x0071e / x0001e, 0),
x0076e = replace_na(x0076e / x0001e, 0)) %>%
step_mutate(x0088e = replace_na(x0088e / x0087e, 0),
x0089e = replace_na(x0089e / x0087e, 0)) %>%
step_mutate(c01_002e = replace_na(c01_002e / c01_001e, 0),
c01_003e = replace_na(c01_003e / c01_001e, 0),
c01_004e = replace_na(c01_004e / c01_001e, 0),
c01_005e = replace_na(c01_005e / c01_001e, 0)) %>%
step_mutate(c01_007e = replace_na(c01_007e / c01_006e, 0),
c01_008e = replace_na(c01_008e / c01_006e, 0),
c01_009e = replace_na(c01_009e / c01_006e, 0),
c01_010e = replace_na(c01_010e / c01_006e, 0),
c01_011e = replace_na(c01_011e / c01_006e, 0),
c01_012e = replace_na(c01_012e / c01_006e, 0),
c01_013e = replace_na(c01_013e / c01_006e, 0),
c01_014e = replace_na(c01_014e / c01_006e, 0),
c01_015e = replace_na(c01_015e / c01_006e, 0)) %>%
step_mutate(c01_017e = replace_na(c01_017e / c01_016e, 0),
c01_018e = replace_na(c01_018e / c01_016e, 0)) %>%
step_mutate(c01_020e = replace_na(c01_020e / c01_019e, 0),
c01_021e = replace_na(c01_021e / c01_019e, 0)) %>%
step_mutate(c01_023e = replace_na(c01_023e / c01_022e, 0),
c01_024e = replace_na(c01_024e / c01_022e, 0)) %>%
step_mutate(c01_026e = replace_na(c01_026e / c01_026e, 0),
c01_027e = replace_na(c01_027e / c01_026e, 0)) %>%
step_mutate(c01_001e = replace_na(c01_001e / x0001e, 0),
c01_006e = replace_na(c01_001e / x0001e, 0),
c01_016e = replace_na(c01_001e / x0001e, 0),
c01_019e = replace_na(c01_001e / x0001e, 0),
c01_022e = replace_na(c01_001e / x0001e, 0),
c01_025e = replace_na(c01_001e / x0001e, 0)) %>%
step_zv(all_predictors())
library(stack)
library(stacks)
library(stacks)
boost_model <- boost_tree(
trees = 1891,
tree_depth = 7,
learn_rate = 0.01,
loss_reduction = 2.78e-9,
sample_size = 0.264
) %>%
set_engine("xgboost") %>%
set_mode("regression")
boost_workflow_1 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_1)
boost_workflow_2 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_2)
boost_workflow_3 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_3)
train_folds <- vfold_cv(cleaned_train, v=5, strata = 'percent_dem')
boost_fit_1 <- fit_resamples(boost_workflow_1, resamples = train_folds)
boost_fit_2 <- fit_resamples(boost_workflow_2, resamples = train_folds)
boost_fit_3 <- fit_resamples(boost_workflow_3, resamples = train_folds)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
source("~/Desktop/101CRegression/Regression/new.R", echo=TRUE)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3) %>% control_stack()
stack <- stacks(data = cleaned_train) %>%control_stack()
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
control_stack()
stack <- stacks(data = cleaned_train,
control = control_stack(save_pred = TRUE)) %>%
add_candidates(list(boost_fit, tree_fit, linear_fit))
stack <- stacks(data = cleaned_train,
control = control_stack(save_pred = TRUE)) %>%
add_candidates(list(boost_fit_1, boost_fit_2, boost_fit_3))
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
control_stack
control_stack()
stack <- stacks(data = train) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
stack <- stacks() %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
stack <- stacks() %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
stack <- stacks(data = cleaned_train) %>%
add_candidates(c(boost_fit_1, boost_fit_2, boost_fit_3))
stack <- stacks(data = cleaned_train) %>%
add_candidates(c(boost_fit_1, boost_fit_2, boost_fit_3))
stack <- stacks(data = cleaned_train) %>%
add_candidates(list(boost_fit_1, boost_fit_2, boost_fit_3))
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
library(stacks)
boost_model <- boost_tree(
trees = 1891,
tree_depth = 7,
learn_rate = 0.01,
loss_reduction = 2.78e-9,
sample_size = 0.264
) %>%
set_engine("xgboost") %>%
set_mode("regression")
boost_workflow_1 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_1)
boost_workflow_2 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_2)
boost_workflow_3 <- workflow() %>%
add_model(boost_model) %>%
add_recipe(recipe_3)
train_folds <- vfold_cv(cleaned_train, v=5, strata = 'percent_dem')
boost_fit_1 <- fit_resamples(boost_workflow_1, resamples = train_folds)
stack <- stacks() %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
stack <- stacks() %>%
add_candidates(boost_fit_1)
stack <- stacks() %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
boost_fit_1 <- boost_workflow_1 %>% fit(cleaned_train)
boost_fit_1 <- boost_workflow_1 %>% fit(cleaned_train)
boost_fit_2 <- fit_resamples(boost_workflow_2, resampl
s = train_folds)
boost_fit_2 <- boost_workflow_2 %>% fit(cleaned_train)
boost_fit_3 <- boost_workflow_3 %>% fit(cleaned_train)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_workflow_1) %>%
add_candidates(boost_workflow_2) %>%
add_candidates(boost_workflow_3)
stack <- stacks(data = cleaned_train) %>%
add_candidates(boost_model) %>%
add_candidates(boost_model) %>%
add_candidates(boost_model)
stack <- stacks() %>%
add_candidates(boost_model) %>%
add_candidates(boost_model) %>%
add_candidates(boost_model)
stack <- stacks() %>%
add_candidates(boost_model)
test_predictions <- tibble(
boost_fit_1 = predict(boost_fit_1, new_data = cleaned_train)$pred,
boost_fit_2 = predict(boost_fit_2, new_data = cleaned_train)$pred,
boost_fit_3 = predict(boost_fit_3, new_data = cleaned_train)$pred
)
stack <- stacks() %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
stack <- stacks(test_predictions) %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
stack <- test_predictions %>%
stacks() %>%
add_candidates(boost_fit_1, boost_fit_2, boost_fit_3)
test_predictions
test_predictions <- tibble(
boost_fit_1 = predict(boost_fit_1, new_data = cleaned_train)$pred,
boost_fit_2 = predict(boost_fit_2, new_data = cleaned_train)$pred,
boost_fit_3 = predict(boost_fit_3, new_data = cleaned_train)$pred
)
test_predictions
test_predictions <- tibble(
boost_fit_1 = predict(boost_fit_1, new_data = cleaned_train)$.pred,
boost_fit_2 = predict(boost_fit_2, new_data = cleaned_train)$.pred,
boost_fit_3 = predict(boost_fit_3, new_data = cleaned_train)$.pred
)
test_predictions
library(tidymodels)
library(tidyverse)
library(rpart)
library(xgboost)
poly_tune <- readRDS("poly_svm_tune.rds")
xgboost_tune <- readRDS("boost_tune.rds")
rf_tune <- readRDS("rf_tune.rds")
poly_tune %>%
show_best() %>%
head(n=1)
xgboost_tune %>%
show_best() %>%
head(n=1)
rf_tune %>%
show_best() %>%
head(n=1)
train <- read_csv("train.csv")
test <- read_csv("test.csv")
View(poly_tune)
poly_tune
stack <- stacks() %>%
add_candidates(poly_tune) %>%
add_candidates(xgboost_tune) %>%
add_candidates(rf_tune)
stacks()
stack <- stacks() %>%
add_candidates(poly_tune) %>%
add_candidates(xgboost_tune) %>%
add_candidates(rf_tune)
stacks()
stack <- stacks() %>%
add_candidates(poly_tune) %>%
add_candidates(xgboost_tune) %>%
add_candidates(rf_tune)
stack <-
stacks() %>%
add_candidates(poly_tune) %>%
add_candidates(xgboost_tune) %>%
add_candidates(rf_tune)
boost_fit_1 <- fit_resamples(boost_workflow_1, resamples = train_folds)
boost_fit_1 <- fit_resamples(boost_workflow_1, resamples = train_folds)
boost_fit_2 <- fit_resamples(boost_workflow_2, resamples = train_folds)
boost_fit_2 <- fit_resamples(boost_workflow_2, resamples = train_folds)
boost_fit_3 <- fit_resamples(boost_workflow_3, resamples = train_folds)
stack <- stacks() %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
boost_fit_1 <- fit_resamples(boost_workflow_1, resamples = train_folds, control = control_stack())
stack <- stacks() %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
??control_stack
stack <- stacks() %>%
add_candidates(candidates = boost_fit_1) %>%
add_candidates(candidates = boost_fit_2) %>%
add_candidates(candidates = boost_fit_3)
stack <- stacks() %>%
add_candidates(boost_fit_1) %>%
add_candidates(boost_fit_2) %>%
add_candidates(boost_fit_3)
stack <- stacks() %>%
add_candidates(xgboost_tune)
stacks
stacks()
stack <- stacks() %>%
add_candidates(xgboost_tune)
stack <- stacks() %>%
add_candidates(boost_workflow_1)
stack <- stacks() %>%
add_candidates(boost_fit_1)
control_stacks()
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
rlang::last_trace()
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
concrete_stack <- stacks() %>%
add_candidates(models)
models
concrete_stack <- stacks() %>%
add_candidates(models)
models %>%
extract_workflow()
grid_ctrl <-
control_grid(
save_pred = TRUE,
parallel_over = "everything",
save_workflow = TRUE
)
models <- models %>%
workflow_map(resamples = train_folds,
control = grid_ctrl)
concrete_stack <- stacks() %>%
add_candidates(models)
ens <- blend_predictions(concrete_stack, penalty = 10^seq(-2, -0.5, length = 20))
ens <- fit_members(ens)
reg_metrics <- metric_set(rmse, rsq)
ens_test_pred <-
predict(ens, concrete_test) %>%
bind_cols(concrete_test)
ens_test_pred <-
predict(ens, concrete_test) %>%
bind_cols(concrete_test)
reg_metrics
ens_test_pred <-
predict(ens, cleaned_train) %>%
bind_cols(cleaned_train$percent_dem)
ens_test_pred %>%
reg_metrics(percent_dem, .pred)
ens_test_pred
true_result <- read_csv("try_result.csv")
true_result
ens_test_pred <-
predict(ens, test) %>%
bind_cols(true_result$.pred)
ens_test_pred
predict(ens, test)
ens_test_pred <-
predict(ens, test) %>%
bind_cols(true_result$.pred)
ens_test_pred
ens_test_pred %>%
summarise(sum((.pred-...2)^2)/780)
ens <- blend_predictions(concrete_stack, penalty = 10^seq(-2, -0.5, length = 20))
autoplot(ens)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
ens_test_pred <- predict(ens, cleaned_train)
ens_test_pred
ens_test_pred %>%
mutate(train$percent_dem)
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
result <- ens %>%
predict(test)
result
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
ens_test_pred %>% summarise(sum((.pred-...2)^2)/780)
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
result
result <- result %>%
mutate(id = test$id)
result
write_csv(result, "combine_result.csv")
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
ens_test_pred %>% reg_metrics(percent_dem, .pred)
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
ens_test_pred
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
result <- ens %>%
predict(test)
result <- result %>%
mutate(id = test$id)
result
train_folds <- vfold_cv(cleaned_train, v=12, strata = 'percent_dem')
grid_ctrl <-
control_grid(
save_pred = TRUE,
parallel_over = "everything",
save_workflow = TRUE
)
models <- models %>%
workflow_map(resamples = train_folds,
control = grid_ctrl)
concrete_stack <- stacks() %>%
add_candidates(models)
ens <- blend_predictions(concrete_stack, penalty = penalty = 10^seq(-2, -0.5, length = 20))
ens <- blend_predictions(concrete_stack, penalty = 10^seq(-2, -0.5, length = 20))
autoplot(ens)
ens <- blend_predictions(concrete_stack, penalty = 0.01)
ens <- fit_members(ens)
ens_test_pred <- predict(ens, cleaned_train)
ens_test_pred %>%
mutate(a = train$percent_dem) %>%
summarise(sum((.pred-a)^2)/2331)
result
result <- ens %>%
predict(test)
result <- result %>%
mutate(id = test$id)
result
write_csv(result, "combine_result.csv")
result
write_csv(result, "combine_result.csv")
poly_tune %>%
show_best() %>%
head(n=1)
poly_tune <- readRDS("poly_svm_tune.rds")
xgboost_tune <- readRDS("boost_tune.rds")
rf_tune <- readRDS("rf_tune.rds")
poly_tune %>%
show_best() %>%
head(n=1)
xgboost_tune %>%
show_best() %>%
head(n=1)
rf_tune %>%
show_best() %>%
head(n=1)
poly_tune %>%
show_best() %>%
head(n=1)
source("~/Desktop/101CRegression/Regression/combine.R", echo=TRUE)
test %>%
corr(x2013_code, x0001e)
test %>%
cor(x2013_code, x0001e)
train %>%
cor(x2013_code, x0001e)
train %>%
cor(x2013_code, x0001e)
train
train %>%
cor(train$x2013_code, train$x0001e)
cor(train$x2013_code, train$x0001e)
cor(train$x2013_code, train$x0001e)
cor(train$x2013_code, train$income_per_cap_2016)
cor(train$x2013_code, train$income_per_cap_2016, na.rm=TRUE)
cor(train$x2013_code, train$income_per_cap_2016, na=TRUE)
cor(train$x2013_code, train$income_per_cap_2016)
df <-
train %>%
na.omit()
cor(df$x2013_code, df$income_per_cap_2016)
cor(df$x0001e, df$income_per_cap_2016)
df <-
train %>%
cor
df <-
train %>%
cor()
df <-
train %>%
cor(income_per_cap_2016)
cor(df$income_per_cap_2016)
cor(df)
cor(df)
df
cor(df[-name])
cor(df[,-name])
cor(df[-name,])
df <-
train %>%
na.omit() %>%
select(-name)
cor(df)
cor(df)[1,]
cor(df)[,1]
cor(df)[,"income_per_cap_2016"]
cor(df)[,"income_per_cap_2016"] %>%
arrange()
tibble(cor(df)[,"income_per_cap_2016"])
tibble(cor(df))
tibble(cor(df))
ok <- tibble(cor(df))
ok
ok <- data.frame(cor(df))
ok
ok %>%
select(income_per_cap_2016)
ok %>%
select(income_per_cap_2016) %>%
arrange()
ok %>%
select(income_per_cap_2016) %>%
arrange(desc=TRUE)
ok %>%
select(income_per_cap_2016) %>%
arrange(desc=FALSE)
ok %>%
select(income_per_cap_2016) %>%
arrange(by = income_per_cap_2016,desc=FALSE)
ok %>%
select(income_per_cap_2016) %>%
arrange(by = abs(income_per_cap_2016),desc=FALSE)
ok %>%
select(income_per_cap_2016) %>%
arrange(by = abs(income_per_cap_2016),desc=TRUE)
ok %>%
select(income_per_cap_2016) %>%
arrange(by = abs(income_per_cap_2017),desc=TRUE)
ok %>%
select(income_per_cap_2017) %>%
arrange(by = abs(income_per_cap_2017),desc=TRUE)
907.534/101.988
fp(907.534/101.988)
fq(907.534/101.988)
pf(907.534/101.988)
pf(907.534/101.988, 2, 509)
pf(907.534/101.988, 509, 2)
2
pf(907.534/101.988, 2, 509)
1-pf(907.534/101.988, 2, 509)
source("~/Downloads/stat403_variog.R", echo=TRUE)
source("~/Downloads/stat403_variog.R", echo=TRUE)
source("~/Downloads/stat403_variog.R", echo=TRUE)
source("~/Downloads/stat403_variog.R", echo=TRUE)
source("~/Downloads/stat403_variog.R", echo=TRUE)
install.packages("gstat")
source("~/Downloads/stat403_variog.R", echo=TRUE)
install.packages("XQuartz")
